<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

    <security:global-method-security secured-annotations="enabled"/>

    <!--
    The ‹http› namespace block always creates an SecurityContextPersistenceFilter,
    an ExceptionTranslationFilter and a FilterSecurityInterceptor. These are
    fixed and cannot be replaced with alternatives.
    -->

    <security:http pattern="/comker/*.jsp" security="none"/>
    <security:http pattern="/comker/*.html" security="none"/>
    <security:http pattern="/comker/*.js" security="none"/>
    <security:http pattern="/comker/lib/**" security="none"/>
    <security:http pattern="/comker/app/**" security="none"/>

    <security:http
            auto-config="true"
            use-expressions="true"
            access-decision-manager-ref="comkerAccessDecisionManager"
            entry-point-ref="comkerAuthenticationEntryPoint">

        <!-- <security:anonymous enabled="false"/> -->

        <!-- Authorization support through ACL -->
        <security:intercept-url pattern="/ws/comker/api/auth/**" access="permitAll"/>
        <security:intercept-url pattern="/ws/comker/api/**" access="hasRole('PERM_COMKER_USER')"/>
        
        <!-- Form login support -->
        <security:custom-filter before="FORM_LOGIN_FILTER" ref="comkerAjaxFormLoginFilter"/>
        
        <security:form-login
                login-page="/comker/#auth/login"
                login-processing-url="/login"
                username-parameter="username"
                password-parameter="password"
                default-target-url="/comker/"
                authentication-failure-url="/comker/#auth/loginFailure"/>

        <!-- Remember Me authentication support -->
        <!-- <security:remember-me key="comkerAppKey" token-validity-seconds="1209600"/> -->
        <!-- <security:remember-me services-ref="comkerRememberMeServices"/> -->

        <!-- Anonymous Login support -->
        <!-- <security:anonymous username="guest" granted-authority="ROLE_GUEST"/> -->

        <!-- Log out support -->
        <security:logout 
                invalidate-session="true"
                delete-cookies="true"
                logout-url="/logout"
                logout-success-url="/comker/#auth/logoutSuccess"/>
    </security:http>

    <!-- <security:debug/> -->

    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <!-- Delegating Entry Point (ajax and default) -->
	<bean id="comkerAuthenticationEntryPoint"
            class="org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint">
	     <constructor-arg>
	         <map>
	             <entry key="hasHeader('X-Requested-With','ComkerAjaxRequest')"
                        value-ref="comkerAjaxAuthenticationEntryPoint"/>
	         </map>
	     </constructor-arg>
	     <property name="defaultEntryPoint" ref="comkerDefaultAuthenticationEntryPoint"/>
	</bean>

    <bean id="comkerAjaxAuthenticationEntryPoint"
            class="net.cokkee.comker.security.web.authentication.ComkerAjaxAuthenticationEntryPoint">
        <property name="helper" ref="comkerAjaxAuthenticationHelper"/>
    </bean>

    <bean id="comkerDefaultAuthenticationEntryPoint"
            class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<property name="loginFormUrl" value="/comker/#auth/login"/>
	</bean>


    <bean id="comkerAjaxFormLoginFilter"
            class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <property name="authenticationManager" ref="comkerAuthenticationManager"/>
        <property name="filterProcessesUrl" value="/login-ajax"/>
        <property name="usernameParameter" value="username"/>
        <property name="passwordParameter" value="password"/>
        <property name="authenticationSuccessHandler" ref="comkerAjaxAuthenticationSuccessHandler"/>
        <property name="authenticationFailureHandler" ref="comkerAjaxAuthenticationFailureHandler"/>
    </bean>

    <bean id="comkerAjaxAuthenticationSuccessHandler"
            class="net.cokkee.comker.security.web.authentication.ComkerAjaxAuthenticationSuccessHandler">
        <property name="helper" ref="comkerAjaxAuthenticationHelper"/>
    </bean>

    <bean id="comkerAjaxAuthenticationFailureHandler"
            class="net.cokkee.comker.security.web.authentication.ComkerAjaxAuthenticationFailureHandler">
        <property name="helper" ref="comkerAjaxAuthenticationHelper"/>
    </bean>

    <bean id="comkerAjaxAuthenticationHelper"
            class="net.cokkee.comker.security.web.authentication.ComkerAjaxAuthenticationHelper">
        <property name="requestMatcher">
            <bean class="org.springframework.security.web.util.ELRequestMatcher">
                <constructor-arg value="hasHeader('X-Requested-With','ComkerAjaxRequest')"/>
            </bean>
        </property>
    </bean>

    <!--
    <security:custom-filter position="BASIC_AUTH_FILTER" ref="comkerBasicAuthenticationFilter"/>

    <bean id="comkerBasicAuthenticationFilter"
            class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
        <property name="authenticationManager" ref="comkerAuthenticationManager"/>
        <property name="authenticationEntryPoint" ref="comkerAuthenticationEntryPoint"/>
    </bean>

    <bean id="comkerAuthenticationEntryPoint"
            class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint">
        <property name="realmName" value="Username: jack Password: jill"/>
    </bean>

    <bean id="comkerAuthenticationEntryPoint2"
            class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <property name="loginFormUrl" value="/login.jsp"/>
    </bean>
    -->

    <!--
    <security:custom-filter position="FORM_LOGIN_FILTER" ref="comkerFormLoginFilter"/>

    <bean id="comkerFormLoginFilter"
            class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <property name="authenticationManager" ref="comkerAuthenticationManager"/>
        <property name="filterProcessesUrl" value="/j_spring_security_check"/>
        <property name="usernameParameter" value="username"/>
        <property name="passwordParameter" value="password"/>
        <property name="authenticationSuccessHandler">
            <bean class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
                <property name="alwaysUseDefaultTargetUrl" value="true"/>
                <property name="defaultTargetUrl" value="/success.jsp"/>
            </bean>
        </property>
        <property name="authenticationFailureHandler" ref="comkerAuthenticationFailureHandler"/>
    </bean>

    <bean id="comkerAuthenticationFailureHandler"
            class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"/>

    <bean id="comkerAuthenticationFailureHandler"
            class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.security.authentication.BadCredentialsException">/login/badCredentials</prop>
                <prop key="org.springframework.security.authentication.CredentialsExpiredException">/login/credentialsExpired</prop>
                <prop key="org.springframework.security.authentication.LockedException">/login/accountLocked</prop>
                <prop key="org.springframework.security.authentication.DisabledException">/login/accountDisabled</prop>
            </props>
        </property>
    </bean>
    -->
    
    <!--
    <security:custom-filter position="LOGOUT_FILTER" ref="comkerLogoutFilter"/>

    <bean id="comkerLogoutFilter"
            class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <constructor-arg value="/logout"/>
        <constructor-arg>
            <list>
                <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
            </list>
        </constructor-arg>
        <property name="filterProcessesUrl" value="/comker/#auth/logoutSuccess"/>
    </bean>
    -->

    <!--
    <security:custom-filter position="FILTER_SECURITY_INTERCEPTOR" ref="comkerFilterSecurityInterceptor"/>

    <bean id="comkerFilterSecurityInterceptor"
            class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
        <property name="authenticationManager" ref="comkerAuthenticationManager"/>
        <property name="accessDecisionManager" ref="comkerAccessDecisionManager"/>
        <property name="securityMetadataSource">
            <security:filter-security-metadata-source lowercase-comparisons="true"
                    request-matcher="ant" use-expressions="true">
                <security:intercept-url pattern="/app/messageList*" access="ROLE_USER,ROLE_ANONYMOUS"/>
                <security:intercept-url pattern="/app/messagePost*" access="ROLE_USER"/>
                <security:intercept-url pattern="/app/messageDelete*" access="ROLE_ADMIN"/>
                <security:intercept-url pattern="/app/*" access="ROLE_USER"/>
            </security:filter-security-metadata-source>
        </property>
    </bean>
    -->

    <!--
    <security:custom-filter position="REMEMBER_ME_FILTER" ref="comkerRememberMeFilter"/>

    <bean id="comkerRememberMeFilter"
            class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
        <property name="rememberMeServices" ref="comkerRememberMeServices"/>
        <property name="authenticationManager" ref="comkerRememberMeAuthenticationManager"/>
    </bean>

    <bean id="comkerRememberMeAuthenticationManager"
            class="org.springframework.security.authentication.rememberme.RememberMeAuthenticationProvider"/>
    -->

    <!--
    <bean id="comkerRememberMeServices"
          class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
        <property name="key" value="comkerAppKey"/>
        <property name="userDetailsService" ref="comkerUserDetailsService"/>
        <property name="tokenRepository" ref="comkerInMemoryTokenRepository"/>
    </bean>

    <bean id="comkerDatabaseTokenRepository"
            class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
        <property name="dataSource" ref="comkerDataSource"/>
        <property name="createTableOnStartup" value="true"/>
    </bean>

    <bean id="comkerInMemoryTokenRepository"
            class="org.springframework.security.web.authentication.rememberme.InMemoryTokenRepositoryImpl">
    </bean>
    -->

    <!--
    <security:custom-filter position="ANONYMOUS_FILTER" ref="comkerAnonymousFilter"/>

    <bean id="comkerAnonymousFilter"
            class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter" >
        <property name="userAttribute" value="ROLE_GUEST"/>
    </bean>
    -->

    <!--
    There are 3 built-in decision managers:
    - AffirmativeBased: At least one voter must vote to grant access
    - ConsensusBased: Majority of voters must vote to grant access
    - UnanimousBased: All voters must vote to abstain or grant access (no voter votes to deny access)

    By default, an AffirmativeBased access decision manager will be intialized
    with 2 voters: RoleVoter and AuthenticatedVoter.
    - RoleVoter grants access if the user has some role as the resouce required
    - AuthenticatedVoter grants access only if user is authenticated
    -->
    <bean id="comkerAccessDecisionManager"
            class="org.springframework.security.access.vote.AffirmativeBased">
        <property name="decisionVoters">
            <list>
                <ref bean="comkerExpressionVoter"/>
                <ref bean="comkerRoleVoter"/>
                <ref bean="comkerAuthenticatedVoter"/>
            </list>
        </property>
    </bean>

    <bean id="comkerRoleVoter"
            class="org.springframework.security.access.vote.RoleVoter">
        <property name="rolePrefix" value="PERM_COMKER_"/>
    </bean>

    <bean id="comkerAuthenticatedVoter"
            class="org.springframework.security.access.vote.AuthenticatedVoter">
    </bean>

    <bean id="comkerExpressionVoter"
            class="org.springframework.security.web.access.expression.WebExpressionVoter">
        <property name="expressionHandler" ref="comkerExpressionHandler"/>
    </bean>

    <bean id="comkerExpressionHandler"
            class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>

    <!--
    <security:authentication-manager alias="comkerAuthenticationManager">
        <security:authentication-provider>
            <security:password-encoder hash="md5"/>
            <security:user-service>
                <security:user name="user"
                        password="e10adc3949ba59abbe56e057f20f883e"
                        authorities="VLFR_MEMBER"/>
                <security:user name="manager"
                        password="e10adc3949ba59abbe56e057f20f883e"
                        authorities="VLFR_MEMBER,VLFR_MANAGER"/>
                <security:user name="admin"
                        password="e10adc3949ba59abbe56e057f20f883e"
                        authorities="VLFR_MEMBER,VLFR_MANAGER,VLFR_ADMIN"/>
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>
    -->
    
    <security:authentication-manager alias="comkerAuthenticationManager">
        <security:authentication-provider user-service-ref="comkerUserDetailsService">
            <security:password-encoder hash="md5"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="comkerPasswordEncoder"
            class="org.springframework.security.authentication.encoding.Md5PasswordEncoder">
    </bean>

    <bean id="comkerUserDetailsService"
            class="net.cokkee.comker.service.ComkerUserDetailsService">
        <property name="userDao" ref="comkerUserDao"/>
    </bean>

    <bean id="comkerSecurityService"
            class="net.cokkee.comker.service.impl.ComkerSecurityServiceImpl">
    </bean>
</beans>

